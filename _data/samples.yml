# Code Samples in _samples
- file: thread.c
  description: "thread.c - A demo of pthreads in C."

- file: pointers.c
  description: "pointers.c - various ways to access pointed to things in C"

- file: extract.c
  description: "extract.c - "

- file: stringtest.c
  description: "stringtest.c - accessing strings in various ways using C"

- file: forktest.c
  description: "forktest.c - example using posix fork()"

- file: hello-c.c
  description: "hello-c.c - hello world in C"

- file: hello-printf.s
  description: "hello-printf.s - Write hello world to terminal in asm using printf()"

- file: exercise-1-8.c
  description: "exercise-1-8.c - Exercise 1.8, part c from text"

- file: Makefile
  description: "Makefile - to compile samples"

- file: show-args.c
  description: "show-args.c - accessing command line arguments (char **) in C"

- file: highbit.c
  description: "highbit.c -- show high bits of word in C"

- file: any_even.c
  description: "any_even.c - return 1 if any even-numbered bit in word set to 1"

- file: int-show.c
  description: "intshow.c - show hex representation of words"

- file: add-args.s
  description: "add-args.s - add two numbers on the command line"

- file: swap.s
  description: "swap.s - swap x and y in asm"

- file: buftest.c
  description: "buftest.c - sample using char buffer"

- file: pointertest.c
  description: "pointertest.c - some experiments with pointers in C"

- file: exercise-1.c
  description: "exercise-1-8.c - Exercise 1, part c from text"

- file: even.c
  description: "even.c - return 1 if any even-numbered bit in word set to 1"

- file: op-ex.s
  description: "op-ex.s - solutions to in-class operations exercises"

- file: zips1.c
  description: "zips1.c - allocating and using an array of arrays (int **) "

- file: hello-c.i
  description: "hello-c.i - GCC preprocessor output from hello-c.c"

- file: hello.md
  description: "---"

- file: hello.s
  description: "hello.s - Write hello world to terminal in asm"

- file: hello-puts.s
  description: "hello-puts.s - Write hello world to terminal in asm using puts()"

- file: simple.c
  description: "simple.c - simple C arithmetic to be converted to asm "

- file: count-return.s
  description: "count-return.s - simple example of asm arithmetic functions"

- file: zips2.c
  description: "zips2.c - allocating and using an array of arrays (int **)"

- file: exploit.c
  description: "exploit.c - Creates an exploit string for buftest."

